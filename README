# Cluster Simulator

Небольшой учебный пример, демонстрирующий работу кластера с фиксированным числом вычислительных узлов и несколькими стратегиями планирования задач.

## Быстрый старт
1. Убедитесь, что установлен Python 3.10 или новее.
2. Запустите симуляцию командой `python cluster.py`.
3. В консоль будет выведено пошаговое выполнение каждого алгоритма и финальное сравнение длительности расписаний.

## Основные объекты
- **Job** — описывает задачу: имя, длительность, требуемое число узлов, приоритет и остаток времени выполнения.
- **Cluster** — хранит общее и доступное количество узлов, следит за запущенными задачами и освобождает ресурсы после завершения.

## Алгоритмы планирования
- **FIFO** — задачи запускаются строго в порядке поступления, если хватает узлов. Иначе очередь ждёт, пока освободятся ресурсы.
- **Priority** — задачи хранятся в куче, на каждом шаге выбирается самая приоритетная из тех, что умещаются в кластер.
- **Backfill** — очередь остаётся FIFO, но если первой задаче не хватает узлов, планировщик пытается запустить более короткие задачи из хвоста, если они успеют завершиться раньше освобождения ресурсов для головы очереди.

## Что показывает вывод
Для каждого алгоритма печатаются моменты запуска и завершения задач, после чего отображается суммарное время работы расписания. В блоке `SUMMARY` можно увидеть сравнение трёх стратегий на одном наборе входных данных.

## Как адаптировать пример
Изменяйте список `base_jobs` и параметр `total_nodes` в конце `cluster.py`, чтобы посмотреть, как разные стратегии ведут себя на иных нагрузках и размерах кластера.
